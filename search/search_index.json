{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"What is Zebrunner? Overview Zebrunner is a test automation management tool that provides full transparency of your test results within multiple environments and platforms. To adjust Zebrunner to all your needs, we focus on its three main components: Zebrunner Engine Our cloud-based Selenium hub lets you run up to 1000 web, mobile, and API tests and reduce execution time and costs - you pay only for the period you test. We support popular platforms like Google Chrome, Firefox, Opera, Microsoft Edge, Internet Explorer, Android, iOS, and provide stability and quality of your execution. Zebrunner Insights We offer premium reporting features for your tests. See test results in real time - Zebrunner records interactive video sessions, publishes logs and screenshots. Track your pass rate, infrastructure usage, and automation team performance in one application. Zebrunner Guard Your data and users will be safe with our enterprise-grade security and centralized administration. Due to the flexible permission management, you can limit access to certain information and keep the workflow steady. What you can do with Zebrunner? Execute large amounts of tests in parallel and pay less - reduce regression time without loss of effective coverage and save money with our by-minute pricing. Rerun only failed tests - instead of running thousands of tests again and again, choose only failed ones and fix bugs quickly. Track test results in real time - investigate bugs, see logs and video recordings of test sessions even while your tests are being executed. Stay aware of the execution process - get immediate notifications to Slack and email after a test run is finished. Link known issues to your tests in Jira - Zebrunner automatically attaches a ticket to a failed test with the same stack trace, which dramatically reduces the time for test analyses and investigation. See detailed test analyses and team performance on configurable dashboards - use a basic set of widgets or create your own ones by choosing from multiple parameters, share test results via email or export them to HTML, and manage your automation team in one click.","title":"What is Zebrunner?"},{"location":"#what-is-zebrunner","text":"","title":"What is Zebrunner?"},{"location":"#overview","text":"Zebrunner is a test automation management tool that provides full transparency of your test results within multiple environments and platforms. To adjust Zebrunner to all your needs, we focus on its three main components: Zebrunner Engine Our cloud-based Selenium hub lets you run up to 1000 web, mobile, and API tests and reduce execution time and costs - you pay only for the period you test. We support popular platforms like Google Chrome, Firefox, Opera, Microsoft Edge, Internet Explorer, Android, iOS, and provide stability and quality of your execution. Zebrunner Insights We offer premium reporting features for your tests. See test results in real time - Zebrunner records interactive video sessions, publishes logs and screenshots. Track your pass rate, infrastructure usage, and automation team performance in one application. Zebrunner Guard Your data and users will be safe with our enterprise-grade security and centralized administration. Due to the flexible permission management, you can limit access to certain information and keep the workflow steady.","title":"Overview"},{"location":"#what-you-can-do-with-zebrunner","text":"Execute large amounts of tests in parallel and pay less - reduce regression time without loss of effective coverage and save money with our by-minute pricing. Rerun only failed tests - instead of running thousands of tests again and again, choose only failed ones and fix bugs quickly. Track test results in real time - investigate bugs, see logs and video recordings of test sessions even while your tests are being executed. Stay aware of the execution process - get immediate notifications to Slack and email after a test run is finished. Link known issues to your tests in Jira - Zebrunner automatically attaches a ticket to a failed test with the same stack trace, which dramatically reduces the time for test analyses and investigation. See detailed test analyses and team performance on configurable dashboards - use a basic set of widgets or create your own ones by choosing from multiple parameters, share test results via email or export them to HTML, and manage your automation team in one click.","title":"What you can do with Zebrunner?"},{"location":"dashboards_and_widgets/","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Dashboards and widgets"},{"location":"dashboards_and_widgets/#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"dashboards_and_widgets/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Commands"},{"location":"dashboards_and_widgets/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"getting_started/","text":"Getting started Components overview TBD","title":"Getting started"},{"location":"getting_started/#getting-started","text":"","title":"Getting started"},{"location":"getting_started/#components-overview","text":"TBD","title":"Components overview"},{"location":"integrations/","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Integrations"},{"location":"integrations/#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"integrations/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Commands"},{"location":"integrations/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"projects/","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Projects"},{"location":"projects/#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"projects/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Commands"},{"location":"projects/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"test_runs_and_sessions/","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Test runs and sessions"},{"location":"test_runs_and_sessions/#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"test_runs_and_sessions/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Commands"},{"location":"test_runs_and_sessions/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"user_management/","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"User management"},{"location":"user_management/#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"user_management/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Commands"},{"location":"user_management/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"user_profile/","text":"User profile Edit personal information To navigate to the User Profile page, go to the side menu and click the profile icon in the lower-left corner of the window. Choose the \u201cAccount Profile\u201d section. The User Account Profile page contains several elements: Profile photo and information : This area shows your profile photo, first and last name (is edited in Personal data area), your role in the application. To change your profile photo, click the profile icon at the top of the page, upload or drop a file from your computer and click \u201cUpload\u201d . Access Token : In the Access token area, copy Service URL and Access token (you can generate it by clicking the lifecycle button) to get integrated with Zafira. Personal data : In this area, you can see your personal information: Username, Email, First and Last Name. Both Username and Email are set when creating a profile, you cannot change them. First Name and Last Name are editable. After you make the necessary changes, click the \u201cSave\u201d button. Preferences : Here you can choose the default tests view - Test runs or Test sessions. After you set the preference, click \u201cSave\u201d . Change password : To change a password, enter your current password, then enter a new one. A password must contain from 5 to 50 characters which can be letters, numbers, special characters. Logout : To log out, go to the side menu and click the profile icon in the lower-left corner of the window. Click the \u201cLog out\u201d button at the bottom of the menu.","title":"User profile"},{"location":"user_profile/#user-profile","text":"","title":"User profile"},{"location":"user_profile/#edit-personal-information","text":"To navigate to the User Profile page, go to the side menu and click the profile icon in the lower-left corner of the window. Choose the \u201cAccount Profile\u201d section. The User Account Profile page contains several elements: Profile photo and information : This area shows your profile photo, first and last name (is edited in Personal data area), your role in the application. To change your profile photo, click the profile icon at the top of the page, upload or drop a file from your computer and click \u201cUpload\u201d . Access Token : In the Access token area, copy Service URL and Access token (you can generate it by clicking the lifecycle button) to get integrated with Zafira. Personal data : In this area, you can see your personal information: Username, Email, First and Last Name. Both Username and Email are set when creating a profile, you cannot change them. First Name and Last Name are editable. After you make the necessary changes, click the \u201cSave\u201d button. Preferences : Here you can choose the default tests view - Test runs or Test sessions. After you set the preference, click \u201cSave\u201d . Change password : To change a password, enter your current password, then enter a new one. A password must contain from 5 to 50 characters which can be letters, numbers, special characters. Logout : To log out, go to the side menu and click the profile icon in the lower-left corner of the window. Click the \u201cLog out\u201d button at the bottom of the menu.","title":"Edit personal information"}]}